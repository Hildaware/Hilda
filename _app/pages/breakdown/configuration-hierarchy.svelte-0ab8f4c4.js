import{S as tl,i as el,s as ll,e as l,t as n,k as r,c as s,a,h as i,d as e,m as c,b as o,g as sl,I as t,n as pe}from"../../chunks/index-0093e6f6.js";function al($e){let p,m,S,_t,wt,w,h,Q,Et,mt,g,X,It,bt,Y,yt,Lt,Z,St,xt,$,Dt,Mt,x,tt,Nt,Pt,et,Ht,Ct,v,D,Tt,At,M,Wt,qt,N,Vt,jt,P,Rt,kt,lt,Ut,Ft,d,H,Gt,Bt,C,Jt,Ot,T,zt,Kt,A,Qt,Xt,W,Yt,Zt,q,$t,te,V,ee,le,j,R,st,I,k,se,ae,b,y,U,oe,ne,_,at,F,ie,re,ot,G,ce,he,nt,B,de,ue,L,J,fe,ve,it,rt,O,ge;return{c(){p=l("div"),m=l("div"),S=l("h2"),_t=n("Configuration Hierarchy"),wt=r(),w=l("div"),h=l("div"),Q=l("h4"),Et=n("Configuration Levels"),mt=r(),g=l("ul"),X=l("li"),It=n("Global"),bt=r(),Y=l("li"),yt=n("Job"),Lt=r(),Z=l("li"),St=n("Set"),xt=r(),$=l("h4"),Dt=n("Each Setting is Individual of its Configuration Level"),Mt=r(),x=l("div"),tt=l("p"),Nt=n(`This means each setting stands alone outside of its configuration level. Changing a single setting
                        does not force the entire configuration to fall down the hierarchy.`),Pt=r(),et=l("h4"),Ht=n('Settings "Fall" Down'),Ct=r(),v=l("div"),D=l("p"),Tt=n("Example:"),At=r(),M=l("small"),Wt=n(`I want every Priority Set to show when I'm in a duty - even outside of combat. So within the global
                        configuration, I set the checkbox for "In Instance".`),qt=r(),N=l("p"),Vt=n("Result:"),jt=r(),P=l("small"),Rt=n(`Now every single job & set configuration will hold that value, therefore each set will show while
                        I'm inside a duty.`),kt=r(),lt=l("h4"),Ut=n("Fine Tuning"),Ft=r(),d=l("div"),H=l("p"),Gt=n("Example:"),Bt=r(),C=l("small"),Jt=n(`Continuing the previous example, let's say I don't want WHM sets to show while in a Duty. Within the WHM
                        job configuration, I would disable the "In Instance" setting.`),Ot=r(),T=l("p"),zt=n("Result:"),Kt=r(),A=l("small"),Qt=n("Now each WHM set will NOT show while in a Duty."),Xt=r(),W=l("small"),Yt=n(`But what if I wanted the Single Target set to show within a Duty only? No problem, just enter that set's
                        configuration and set the checkbox for "In Instance"`),Zt=r(),q=l("p"),$t=n("Result:"),te=r(),V=l("small"),ee=n(`Now that set will be shown while in a Duty, and other WHM sets will still use the setting from the job's
                        configuration`),le=r(),j=l("div"),R=l("div"),st=l("ul"),I=l("li"),k=l("span"),se=n("Global"),ae=r(),b=l("ul"),y=l("li"),U=l("span"),oe=n("RDM"),ne=r(),_=l("ul"),at=l("li"),F=l("span"),ie=n("Single Target"),re=r(),ot=l("li"),G=l("span"),ce=n("Multi Target"),he=r(),nt=l("li"),B=l("span"),de=n("Custom Set"),ue=r(),L=l("li"),J=l("span"),fe=n("PLD"),ve=r(),it=l("ul"),rt=l("li"),O=l("span"),ge=n("Single Target"),this.h()},l(ct){p=s(ct,"DIV",{class:!0});var ht=a(p);m=s(ht,"DIV",{});var dt=a(m);S=s(dt,"H2",{class:!0});var _e=a(S);_t=i(_e,"Configuration Hierarchy"),_e.forEach(e),wt=c(dt),w=s(dt,"DIV",{class:!0});var ut=a(w);h=s(ut,"DIV",{class:!0});var u=a(h);Q=s(u,"H4",{});var we=a(Q);Et=i(we,"Configuration Levels"),we.forEach(e),mt=c(u),g=s(u,"UL",{class:!0});var z=a(g);X=s(z,"LI",{});var Ee=a(X);It=i(Ee,"Global"),Ee.forEach(e),bt=c(z),Y=s(z,"LI",{});var me=a(Y);yt=i(me,"Job"),me.forEach(e),Lt=c(z),Z=s(z,"LI",{});var Ie=a(Z);St=i(Ie,"Set"),Ie.forEach(e),z.forEach(e),xt=c(u),$=s(u,"H4",{});var be=a($);Dt=i(be,"Each Setting is Individual of its Configuration Level"),be.forEach(e),Mt=c(u),x=s(u,"DIV",{class:!0});var ye=a(x);tt=s(ye,"P",{});var Le=a(tt);Nt=i(Le,`This means each setting stands alone outside of its configuration level. Changing a single setting
                        does not force the entire configuration to fall down the hierarchy.`),Le.forEach(e),ye.forEach(e),Pt=c(u),et=s(u,"H4",{});var Se=a(et);Ht=i(Se,'Settings "Fall" Down'),Se.forEach(e),Ct=c(u),v=s(u,"DIV",{class:!0});var E=a(v);D=s(E,"P",{class:!0});var xe=a(D);Tt=i(xe,"Example:"),xe.forEach(e),At=c(E),M=s(E,"SMALL",{class:!0});var De=a(M);Wt=i(De,`I want every Priority Set to show when I'm in a duty - even outside of combat. So within the global
                        configuration, I set the checkbox for "In Instance".`),De.forEach(e),qt=c(E),N=s(E,"P",{class:!0});var Me=a(N);Vt=i(Me,"Result:"),Me.forEach(e),jt=c(E),P=s(E,"SMALL",{class:!0});var Ne=a(P);Rt=i(Ne,`Now every single job & set configuration will hold that value, therefore each set will show while
                        I'm inside a duty.`),Ne.forEach(e),E.forEach(e),kt=c(u),lt=s(u,"H4",{});var Pe=a(lt);Ut=i(Pe,"Fine Tuning"),Pe.forEach(e),Ft=c(u),d=s(u,"DIV",{class:!0});var f=a(d);H=s(f,"P",{class:!0});var He=a(H);Gt=i(He,"Example:"),He.forEach(e),Bt=c(f),C=s(f,"SMALL",{class:!0});var Ce=a(C);Jt=i(Ce,`Continuing the previous example, let's say I don't want WHM sets to show while in a Duty. Within the WHM
                        job configuration, I would disable the "In Instance" setting.`),Ce.forEach(e),Ot=c(f),T=s(f,"P",{class:!0});var Te=a(T);zt=i(Te,"Result:"),Te.forEach(e),Kt=c(f),A=s(f,"SMALL",{class:!0});var Ae=a(A);Qt=i(Ae,"Now each WHM set will NOT show while in a Duty."),Ae.forEach(e),Xt=c(f),W=s(f,"SMALL",{class:!0});var We=a(W);Yt=i(We,`But what if I wanted the Single Target set to show within a Duty only? No problem, just enter that set's
                        configuration and set the checkbox for "In Instance"`),We.forEach(e),Zt=c(f),q=s(f,"P",{class:!0});var qe=a(q);$t=i(qe,"Result:"),qe.forEach(e),te=c(f),V=s(f,"SMALL",{class:!0});var Ve=a(V);ee=i(Ve,`Now that set will be shown while in a Duty, and other WHM sets will still use the setting from the job's
                        configuration`),Ve.forEach(e),f.forEach(e),u.forEach(e),le=c(ut),j=s(ut,"DIV",{class:!0});var je=a(j);R=s(je,"DIV",{class:!0});var Re=a(R);st=s(Re,"UL",{});var ke=a(st);I=s(ke,"LI",{});var ft=a(I);k=s(ft,"SPAN",{class:!0});var Ue=a(k);se=i(Ue,"Global"),Ue.forEach(e),ae=c(ft),b=s(ft,"UL",{});var vt=a(b);y=s(vt,"LI",{});var gt=a(y);U=s(gt,"SPAN",{class:!0});var Fe=a(U);oe=i(Fe,"RDM"),Fe.forEach(e),ne=c(gt),_=s(gt,"UL",{});var K=a(_);at=s(K,"LI",{});var Ge=a(at);F=s(Ge,"SPAN",{class:!0});var Be=a(F);ie=i(Be,"Single Target"),Be.forEach(e),Ge.forEach(e),re=c(K),ot=s(K,"LI",{});var Je=a(ot);G=s(Je,"SPAN",{class:!0});var Oe=a(G);ce=i(Oe,"Multi Target"),Oe.forEach(e),Je.forEach(e),he=c(K),nt=s(K,"LI",{});var ze=a(nt);B=s(ze,"SPAN",{class:!0});var Ke=a(B);de=i(Ke,"Custom Set"),Ke.forEach(e),ze.forEach(e),K.forEach(e),gt.forEach(e),ue=c(vt),L=s(vt,"LI",{});var pt=a(L);J=s(pt,"SPAN",{class:!0});var Qe=a(J);fe=i(Qe,"PLD"),Qe.forEach(e),ve=c(pt),it=s(pt,"UL",{});var Xe=a(it);rt=s(Xe,"LI",{});var Ye=a(rt);O=s(Ye,"SPAN",{class:!0});var Ze=a(O);ge=i(Ze,"Single Target"),Ze.forEach(e),Ye.forEach(e),Xe.forEach(e),pt.forEach(e),vt.forEach(e),ft.forEach(e),ke.forEach(e),Re.forEach(e),je.forEach(e),ut.forEach(e),dt.forEach(e),ht.forEach(e),this.h()},h(){o(S,"class","pb-4"),o(g,"class","list-disc pl-6"),o(x,"class","ml-4"),o(D,"class","font-bold"),o(M,"class","svelte-xigopq"),o(N,"class","font-bold"),o(P,"class","svelte-xigopq"),o(v,"class","section svelte-xigopq"),o(H,"class","font-bold"),o(C,"class","svelte-xigopq"),o(T,"class","font-bold"),o(A,"class","svelte-xigopq"),o(W,"class","svelte-xigopq"),o(q,"class","font-bold"),o(V,"class","svelte-xigopq"),o(d,"class","section svelte-xigopq"),o(h,"class","w-1/2"),o(k,"class","tf-nc"),o(U,"class","tf-nc"),o(F,"class","tf-nc"),o(G,"class","tf-nc"),o(B,"class","tf-nc"),o(J,"class","tf-nc"),o(O,"class","tf-nc"),o(R,"class","tf-tree"),o(j,"class","w-1/2"),o(w,"class","w-full flex"),o(p,"class","bg-gray-100")},m(ct,ht){sl(ct,p,ht),t(p,m),t(m,S),t(S,_t),t(m,wt),t(m,w),t(w,h),t(h,Q),t(Q,Et),t(h,mt),t(h,g),t(g,X),t(X,It),t(g,bt),t(g,Y),t(Y,yt),t(g,Lt),t(g,Z),t(Z,St),t(h,xt),t(h,$),t($,Dt),t(h,Mt),t(h,x),t(x,tt),t(tt,Nt),t(h,Pt),t(h,et),t(et,Ht),t(h,Ct),t(h,v),t(v,D),t(D,Tt),t(v,At),t(v,M),t(M,Wt),t(v,qt),t(v,N),t(N,Vt),t(v,jt),t(v,P),t(P,Rt),t(h,kt),t(h,lt),t(lt,Ut),t(h,Ft),t(h,d),t(d,H),t(H,Gt),t(d,Bt),t(d,C),t(C,Jt),t(d,Ot),t(d,T),t(T,zt),t(d,Kt),t(d,A),t(A,Qt),t(d,Xt),t(d,W),t(W,Yt),t(d,Zt),t(d,q),t(q,$t),t(d,te),t(d,V),t(V,ee),t(w,le),t(w,j),t(j,R),t(R,st),t(st,I),t(I,k),t(k,se),t(I,ae),t(I,b),t(b,y),t(y,U),t(U,oe),t(y,ne),t(y,_),t(_,at),t(at,F),t(F,ie),t(_,re),t(_,ot),t(ot,G),t(G,ce),t(_,he),t(_,nt),t(nt,B),t(B,de),t(b,ue),t(b,L),t(L,J),t(J,fe),t(L,ve),t(L,it),t(it,rt),t(rt,O),t(O,ge)},p:pe,i:pe,o:pe,d(ct){ct&&e(p)}}}class nl extends tl{constructor(p){super(),el(this,p,null,al,ll,{})}}export{nl as default};
